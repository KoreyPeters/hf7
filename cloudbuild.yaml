# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


steps:
  - id: 'branch name'
    name: 'alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "***********************"
        echo "$BRANCH_NAME"
        echo "***********************"

  - id: 'set build variables'
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "$BRANCH_NAME" == "main" ]; then
          echo "human-flourishing-4" > /workspace/project_name.txt
          echo "cncfwwwe3q" > /workspace/cloud_run_hash.txt
          echo "DEBUG" > /workspace/log_level.txt
        else
          echo "Non-protected branch. Setting project to lab."
          echo "human-flourishing-4" > /workspace/project_name.txt
          echo "no-deploy" > /workspace/cloud_run_hash.txt
        fi

  - id: 'tf init'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
          cd terraform/environments/$BRANCH_NAME
          gcloud config set project ${PROJECT_ID}
          terraform init
        else
          for dir in terraform/environments/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFORM INIT ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            gcloud config set project ${PROJECT_ID}
            terraform init || exit 1
            cd ../../
          done
        fi 

  # [START tf-plan]
  - id: 'tf plan'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
          cd terraform/environments/$BRANCH_NAME
          gcloud config set project $(cat /workspace/project_name.txt)
          terraform plan
        else
          for dir in terraform/environments/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}  
            echo ""
            echo "*************** TERRAFORM PLAN ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            gcloud config set project $(cat /workspace/project_name.txt)
            terraform plan || exit 1
            cd ../../
          done
        fi
  # [END tf-plan]

  - id: "build  "
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/${PROJECT_ID}/humanflourishing", "."]
    waitFor:
      - "tf plan"

  - id: "push   "
    name: "gcr.io/cloud-builders/docker"
    args: [ "push", "gcr.io/${PROJECT_ID}/humanflourishing"]
    waitFor:
      - "build  "

  # [START tf-apply]
  - id: 'tf apply'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
          cd terraform/environments/$BRANCH_NAME      
          gcloud config set project $(cat /workspace/project_name.txt)
          terraform apply -auto-approve
        else
          echo "***************************** SKIPPING APPLYING *******************************"
          echo "Branch '$BRANCH_NAME' does not represent an official environment."
          echo "*******************************************************************************"
        fi
    waitFor:
      - "tf plan"
  # [END tf-apply]

  - id: "Deploy to Cloud Run DGM"
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
          gcloud run deploy humanflourishing --platform managed --service-account humanflourishing@${PROJECT_ID}.iam.gserviceaccount.com --region ${_REGION} --image gcr.io/${PROJECT_ID}/humanflourishing --allow-unauthenticated --update-env-vars "CURRENT_HOST=https://humanflourishing-$(cat /workspace/cloud_run_hash.txt)-uc.a.run.app"
        else
          echo "***************************** SKIPPING DEPLOY *******************************"
          echo "Branch '$BRANCH_NAME' does not represent an official environment."
          echo "*******************************************************************************"
        fi
    waitFor:
      - "push   "
      - "tf apply"


substitutions:
  _REGION: us-central1
